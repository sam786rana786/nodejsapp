/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN DepartmentActionsGenerated.js PLEASE EDIT ../DepartmentActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import DepartmentApi from "../../../api/DepartmentApi";

let actionsFunction = {

  //CRUD METHODS

  // Create department
  createDepartment: function(department) {
    return function(dispatch) {
      return DepartmentApi
        .createDepartment(department)
        .then(department => {
          dispatch(actionsFunction.createDepartmentSuccess(department));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createDepartmentSuccess: function(department) {
    return { type: types.CREATE_DEPARTMENT_SUCCESS, payload: department };
  },


  // Delete department
  deleteDepartment: function(id) {
    return function(dispatch) {
      return DepartmentApi
        .deleteDepartment(id)
        .then(department => {
          dispatch(actionsFunction.deleteDepartmentSuccess(department));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteDepartmentSuccess: function(department) {
    return { type: types.DELETE_DEPARTMENT_SUCCESS, payload: department };
  },


  // Find by school_id
  findByschool_id: function(key) {
    return function(dispatch) {
      return DepartmentApi
        .findByschool_id(key)
        .then(item => {
          dispatch(actionsFunction.findByschool_idSuccess(item));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  findByschool_idSuccess: function(item) {
    return { type: types.FINDBYSCHOOL_ID_DEPARTMENT_SUCCESS, payload: item };
  },


  // Get department
  loadDepartment: function(id) {
    return function(dispatch) {
      return DepartmentApi
        .getOneDepartment(id)
        .then(department => {
          dispatch(actionsFunction.loadDepartmentSuccess(department));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadDepartmentSuccess: function(department) {
    return { type: types.GET_DEPARTMENT_SUCCESS, payload: department };
  },

  // Load  list
  loadDepartmentList: function() {
    return function(dispatch) {
      return DepartmentApi
        .getDepartmentList()
        .then(list => {
          dispatch(actionsFunction.loadDepartmentListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadDepartmentListSuccess: function(list) {
    return { type: types.LIST_DEPARTMENT_SUCCESS, payload: list };
  },

	
  // Save department
  saveDepartment: function(department) {
    return function(dispatch) {
      return DepartmentApi
        .saveDepartment(department)
        .then(department => {
          dispatch(actionsFunction.saveDepartmentSuccess(department));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveDepartmentSuccess: function(department) {
    return { type: types.UPDATE_DEPARTMENT_SUCCESS, payload: department };
  },


};

export default actionsFunction;
