/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN DesignationActionsGenerated.js PLEASE EDIT ../DesignationActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import DesignationApi from "../../../api/DesignationApi";

let actionsFunction = {

  //CRUD METHODS

  // Create designation
  createDesignation: function(designation) {
    return function(dispatch) {
      return DesignationApi
        .createDesignation(designation)
        .then(designation => {
          dispatch(actionsFunction.createDesignationSuccess(designation));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createDesignationSuccess: function(designation) {
    return { type: types.CREATE_DESIGNATION_SUCCESS, payload: designation };
  },


  // Delete designation
  deleteDesignation: function(id) {
    return function(dispatch) {
      return DesignationApi
        .deleteDesignation(id)
        .then(designation => {
          dispatch(actionsFunction.deleteDesignationSuccess(designation));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteDesignationSuccess: function(designation) {
    return { type: types.DELETE_DESIGNATION_SUCCESS, payload: designation };
  },


  // Find by school_id
  findByschool_id: function(key) {
    return function(dispatch) {
      return DesignationApi
        .findByschool_id(key)
        .then(item => {
          dispatch(actionsFunction.findByschool_idSuccess(item));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  findByschool_idSuccess: function(item) {
    return { type: types.FINDBYSCHOOL_ID_DESIGNATION_SUCCESS, payload: item };
  },


  // Get designation
  loadDesignation: function(id) {
    return function(dispatch) {
      return DesignationApi
        .getOneDesignation(id)
        .then(designation => {
          dispatch(actionsFunction.loadDesignationSuccess(designation));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadDesignationSuccess: function(designation) {
    return { type: types.GET_DESIGNATION_SUCCESS, payload: designation };
  },

  // Load  list
  loadDesignationList: function() {
    return function(dispatch) {
      return DesignationApi
        .getDesignationList()
        .then(list => {
          dispatch(actionsFunction.loadDesignationListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadDesignationListSuccess: function(list) {
    return { type: types.LIST_DESIGNATION_SUCCESS, payload: list };
  },

	
  // Save designation
  saveDesignation: function(designation) {
    return function(dispatch) {
      return DesignationApi
        .saveDesignation(designation)
        .then(designation => {
          dispatch(actionsFunction.saveDesignationSuccess(designation));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveDesignationSuccess: function(designation) {
    return { type: types.UPDATE_DESIGNATION_SUCCESS, payload: designation };
  },


};

export default actionsFunction;
